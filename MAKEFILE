#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = %cd%

CC = gcc.exe
CXX = g++.exe
AR = ar.exe
LD = g++.exe
WINDRES = windres.exe

INC = -I$(SDL2_INCLUDE)\\SDL2 -Iinclude
CFLAGS = -Wall
RESINC = 
LIBDIR = -L$(SDL2_LIB)
LIB = -lmingw32 -lSDL2main SDL2.dll -luser32 -lgdi32 -lwinmm -ldxguid -lSDL2_image -lSDL2_net -lSDL2_mixer -lSDL2_ttf -lSDL2_test
LDFLAGS = 

INC_DEBUG = $(INC)
CFLAGS_DEBUG = $(CFLAGS) -g -D_DEBUG
RESINC_DEBUG = $(RESINC)
RCFLAGS_DEBUG = $(RCFLAGS)
LIBDIR_DEBUG = $(LIBDIR)
LIB_DEBUG = $(LIB)
LDFLAGS_DEBUG = $(LDFLAGS)
OBJDIR_DEBUG = bin\\Debug\\obj
DEP_DEBUG = 
OUT_DEBUG = bin\\Debug\\Snow_Dbg.dll

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -fexpensive-optimizations -O2
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = bin\\Release\\obj
DEP_RELEASE = 
OUT_RELEASE = bin\\Release\\Snow.dll

OBJ_DEBUG = $(OBJDIR_DEBUG)\\src\\Bundle.o $(OBJDIR_DEBUG)\\src\\CSVEditor.o $(OBJDIR_DEBUG)\\src\\CSVReader.o $(OBJDIR_DEBUG)\\src\\Core.o $(OBJDIR_DEBUG)\\src\\Font.o $(OBJDIR_DEBUG)\\src\\Misc.o $(OBJDIR_DEBUG)\\src\\RenderTarget.o $(OBJDIR_DEBUG)\\src\\ResFile.o $(OBJDIR_DEBUG)\\src\\ResVal.o $(OBJDIR_DEBUG)\\src\\RndPtr.o $(OBJDIR_DEBUG)\\src\\Sound.o $(OBJDIR_DEBUG)\\src\\Sprite.o $(OBJDIR_DEBUG)\\src\\Surface.o $(OBJDIR_DEBUG)\\src\\TCPNet.o $(OBJDIR_DEBUG)\\src\\Thread.o $(OBJDIR_DEBUG)\\src\\UDPNet.o

OBJ_RELEASE = $(OBJDIR_RELEASE)\\src\\Bundle.o $(OBJDIR_RELEASE)\\src\\CSVEditor.o $(OBJDIR_RELEASE)\\src\\CSVReader.o $(OBJDIR_RELEASE)\\src\\Core.o $(OBJDIR_RELEASE)\\src\\Font.o $(OBJDIR_RELEASE)\\src\\Misc.o $(OBJDIR_RELEASE)\\src\\RenderTarget.o $(OBJDIR_RELEASE)\\src\\ResFile.o $(OBJDIR_RELEASE)\\src\\ResVal.o $(OBJDIR_RELEASE)\\src\\RndPtr.o $(OBJDIR_RELEASE)\\src\\Sound.o $(OBJDIR_RELEASE)\\src\\Sprite.o $(OBJDIR_RELEASE)\\src\\Surface.o $(OBJDIR_RELEASE)\\src\\TCPNet.o $(OBJDIR_RELEASE)\\src\\Thread.o $(OBJDIR_RELEASE)\\src\\UDPNet.o

all: debug release

clean: clean_debug clean_release

before_debug: 
	cmd /c if not exist bin\\Debug md bin\\Debug
	cmd /c if not exist $(OBJDIR_DEBUG)\\src md $(OBJDIR_DEBUG)\\src

after_debug: 

debug: before_debug out_debug after_debug

out_debug: before_debug $(OBJ_DEBUG) $(DEP_DEBUG)
	$(LD) -shared $(LIBDIR_DEBUG) $(OBJ_DEBUG)  -o $(OUT_DEBUG) $(LDFLAGS_DEBUG) $(LIB_DEBUG)

$(OBJDIR_DEBUG)\\src\\Bundle.o: src\\Bundle.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Bundle.cpp -o $(OBJDIR_DEBUG)\\src\\Bundle.o

$(OBJDIR_DEBUG)\\src\\CSVEditor.o: src\\CSVEditor.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\CSVEditor.cpp -o $(OBJDIR_DEBUG)\\src\\CSVEditor.o

$(OBJDIR_DEBUG)\\src\\CSVReader.o: src\\CSVReader.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\CSVReader.cpp -o $(OBJDIR_DEBUG)\\src\\CSVReader.o

$(OBJDIR_DEBUG)\\src\\Core.o: src\\Core.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Core.cpp -o $(OBJDIR_DEBUG)\\src\\Core.o

$(OBJDIR_DEBUG)\\src\\Font.o: src\\Font.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Font.cpp -o $(OBJDIR_DEBUG)\\src\\Font.o

$(OBJDIR_DEBUG)\\src\\Misc.o: src\\Misc.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Misc.cpp -o $(OBJDIR_DEBUG)\\src\\Misc.o

$(OBJDIR_DEBUG)\\src\\RenderTarget.o: src\\RenderTarget.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\RenderTarget.cpp -o $(OBJDIR_DEBUG)\\src\\RenderTarget.o

$(OBJDIR_DEBUG)\\src\\ResFile.o: src\\ResFile.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\ResFile.cpp -o $(OBJDIR_DEBUG)\\src\\ResFile.o

$(OBJDIR_DEBUG)\\src\\ResVal.o: src\\ResVal.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\ResVal.cpp -o $(OBJDIR_DEBUG)\\src\\ResVal.o

$(OBJDIR_DEBUG)\\src\\RndPtr.o: src\\RndPtr.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\RndPtr.cpp -o $(OBJDIR_DEBUG)\\src\\RndPtr.o

$(OBJDIR_DEBUG)\\src\\Sound.o: src\\Sound.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Sound.cpp -o $(OBJDIR_DEBUG)\\src\\Sound.o

$(OBJDIR_DEBUG)\\src\\Sprite.o: src\\Sprite.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Sprite.cpp -o $(OBJDIR_DEBUG)\\src\\Sprite.o

$(OBJDIR_DEBUG)\\src\\Surface.o: src\\Surface.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Surface.cpp -o $(OBJDIR_DEBUG)\\src\\Surface.o

$(OBJDIR_DEBUG)\\src\\TCPNet.o: src\\TCPNet.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\TCPNet.cpp -o $(OBJDIR_DEBUG)\\src\\TCPNet.o

$(OBJDIR_DEBUG)\\src\\Thread.o: src\\Thread.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\Thread.cpp -o $(OBJDIR_DEBUG)\\src\\Thread.o

$(OBJDIR_DEBUG)\\src\\UDPNet.o: src\\UDPNet.cpp
	$(CXX) $(CFLAGS_DEBUG) $(INC_DEBUG) -c src\\UDPNet.cpp -o $(OBJDIR_DEBUG)\\src\\UDPNet.o

clean_debug: 
	cmd /c del /f $(OBJ_DEBUG) $(OUT_DEBUG)
	cmd /c rd bin\\Debug
	cmd /c rd $(OBJDIR_DEBUG)\\src

before_release: 
	cmd /c if not exist bin\\Release md bin\\Release
	cmd /c if not exist $(OBJDIR_RELEASE)\\src md $(OBJDIR_RELEASE)\\src

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) -shared $(LIBDIR_RELEASE) $(OBJ_RELEASE)  -o $(OUT_RELEASE) $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)\\src\\Bundle.o: src\\Bundle.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Bundle.cpp -o $(OBJDIR_RELEASE)\\src\\Bundle.o

$(OBJDIR_RELEASE)\\src\\CSVEditor.o: src\\CSVEditor.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\CSVEditor.cpp -o $(OBJDIR_RELEASE)\\src\\CSVEditor.o

$(OBJDIR_RELEASE)\\src\\CSVReader.o: src\\CSVReader.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\CSVReader.cpp -o $(OBJDIR_RELEASE)\\src\\CSVReader.o

$(OBJDIR_RELEASE)\\src\\Core.o: src\\Core.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Core.cpp -o $(OBJDIR_RELEASE)\\src\\Core.o

$(OBJDIR_RELEASE)\\src\\Font.o: src\\Font.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Font.cpp -o $(OBJDIR_RELEASE)\\src\\Font.o

$(OBJDIR_RELEASE)\\src\\Misc.o: src\\Misc.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Misc.cpp -o $(OBJDIR_RELEASE)\\src\\Misc.o

$(OBJDIR_RELEASE)\\src\\RenderTarget.o: src\\RenderTarget.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\RenderTarget.cpp -o $(OBJDIR_RELEASE)\\src\\RenderTarget.o

$(OBJDIR_RELEASE)\\src\\ResFile.o: src\\ResFile.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\ResFile.cpp -o $(OBJDIR_RELEASE)\\src\\ResFile.o

$(OBJDIR_RELEASE)\\src\\ResVal.o: src\\ResVal.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\ResVal.cpp -o $(OBJDIR_RELEASE)\\src\\ResVal.o

$(OBJDIR_RELEASE)\\src\\RndPtr.o: src\\RndPtr.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\RndPtr.cpp -o $(OBJDIR_RELEASE)\\src\\RndPtr.o

$(OBJDIR_RELEASE)\\src\\Sound.o: src\\Sound.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Sound.cpp -o $(OBJDIR_RELEASE)\\src\\Sound.o

$(OBJDIR_RELEASE)\\src\\Sprite.o: src\\Sprite.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Sprite.cpp -o $(OBJDIR_RELEASE)\\src\\Sprite.o

$(OBJDIR_RELEASE)\\src\\Surface.o: src\\Surface.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Surface.cpp -o $(OBJDIR_RELEASE)\\src\\Surface.o

$(OBJDIR_RELEASE)\\src\\TCPNet.o: src\\TCPNet.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\TCPNet.cpp -o $(OBJDIR_RELEASE)\\src\\TCPNet.o

$(OBJDIR_RELEASE)\\src\\Thread.o: src\\Thread.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\Thread.cpp -o $(OBJDIR_RELEASE)\\src\\Thread.o

$(OBJDIR_RELEASE)\\src\\UDPNet.o: src\\UDPNet.cpp
	$(CXX) $(CFLAGS_RELEASE) $(INC_RELEASE) -c src\\UDPNet.cpp -o $(OBJDIR_RELEASE)\\src\\UDPNet.o

clean_release: 
	cmd /c del /f $(OBJ_RELEASE) $(OUT_RELEASE)
	cmd /c rd bin\\Release
	cmd /c rd $(OBJDIR_RELEASE)\\src

.PHONY: before_debug after_debug clean_debug before_release after_release clean_release

